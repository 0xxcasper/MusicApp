//
//  PlaylistViewController.swift
//  MusicApp
//
//  Created admin on 24/03/2020.
//  Copyright © 2020 SangNX. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

enum PlaylistViewControllerType {
    case trending
    case normal
}

class PlaylistViewController: BaseTableViewController {
    
	var presenter: PlaylistPresenterProtocol?
    var type: PlaylistViewControllerType = .normal
    var keyword: String = ""
    
    private var nextPageToken = ""
    
	override func viewDidLoad() {
        super.viewDidLoad()
        setUpViews()
        fetchData()
    }
    
    private func setUpViews() {
        self.title = keyword
        myTableView.registerXibFile(TrendingTbvCell.self)
        myTableView.separatorStyle = .none
        myTableView.dataSource = self
        myTableView.delegate = self
    }
    
    override func setHeightForRow() -> CGFloat {
        return 65
    }
    
    override func fetchData() {
        super.fetchData()
        if listItem.count < totalResult {
            let maxResult = listItem.count + 50 > totalResult ? totalResult - listItem.count : 50
            self.presenter?.startGetListMusic(pageToken: nextPageToken, maxResult: maxResult, type: type, keyword: keyword)
        }
    }
    
    override func cellForRowAt(item: Any, for indexPath: IndexPath, tableView: UITableView) -> UITableViewCell {
        let cell = tableView.dequeueTableCell(TrendingTbvCell.self)
        if let snippet = self.type == .trending ? (item as! Item).snippet : (item as! ItemSearch).snippet,
            let thumbnails = snippet.thumbnails {
            cell.img.loadImageFromInternet(link: thumbnails.defaults!.url!)
            cell.lblTitle.text = snippet.title
            cell.lblChanel.text = snippet.channelTitle
            cell.lblRow.text = "#\(indexPath.row + 1)"
        }
        return cell
    }
}

extension PlaylistViewController: PlaylistViewProtocol
{
    func responseGetListTrendingMusicSuccess(response: VideosResponse) {
        if let pageInfo = response.pageInfo {
            self.totalResult = pageInfo.totalResults! > 100 ? 99 : pageInfo.totalResults!
        }
        if let nextPageToken = response.nextPageToken {
            self.nextPageToken = nextPageToken
        }
        guard let items = response.items else { return }
        self.didFetchData(data: items)
    }
    
    func responseGetListMusicSuccess(response: SearchResponse) {
        if let pageInfo = response.pageInfo {
            self.totalResult = pageInfo.totalResults! > 100 ? 99 : pageInfo.totalResults!
        }
        if let nextPageToken = response.nextPageToken {
            self.nextPageToken = nextPageToken
        }
        guard let items = response.items else { return }
        self.didFetchData(data: items)
    }
    
    func responseGetListMusicFail(error: String) {
        
    }
}
