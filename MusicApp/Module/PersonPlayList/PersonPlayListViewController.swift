//
//  PersonPlayListViewController.swift
//  MusicApp
//
//  Created Sang on 4/4/20.
//  Copyright © 2020 SangNX. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PersonPlayListViewController: BaseViewController, PersonPlayListViewProtocol {

	var presenter: PersonPlayListPresenterProtocol?
    var playList: PlaylistModel! = nil
    let headerView = HeaderView()

    @IBOutlet weak var tbView: UITableView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setUpViews()
    }
    
    private func setUpViews() {
        tbView.registerXibFile(PersonHeaderCell.self)
        tbView.dataSource = self
        tbView.delegate = self
        tbView.separatorStyle = .none
        tbView.contentInset = UIEdgeInsets(top: 0, left: 0, bottom: 45, right: 0)
        self.navigationController?.navigationBar.prefersLargeTitles = false
        self.navigationController?.navigationItem.largeTitleDisplayMode = .never
    }
    
    override func didChangeLanguage() {
        setTitle(title: LocalizableKey.playList.localizeLanguage)
    }
}


extension PersonPlayListViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return playList.items.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueTableCell(TrendingTbvCell.self)
        let snippet = playList.items[indexPath.row].snippet
        let thumbnails = snippet?.thumbnails
        if(snippet != nil && thumbnails != nil) {
            cell.img.loadImageFromInternet(link: (thumbnails?.defaults!.url!)!, completion: nil)
            cell.lblTitle.text = snippet?.title
            cell.lblChanel.text = snippet?.channelTitle
            cell.lblRow.text = "#\(indexPath.row + 1)"
        }
        return cell
    }
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        headerView.delegate = self
        if (playList.items.count > 0) {
            let items = playList.items
            let item = items.first
            let snippet = item?.snippet
            let thumbnails = snippet?.thumbnails
            headerView.img.loadImageFromInternet(link: (thumbnails?.defaults!.url!)!, completion: nil)
            headerView.lblTracks.text = "\(playList.items.count) tracks"
        } else {
            headerView.lblTracks.text = "0 tracks"
        }
        return headerView
    }
}

extension PersonPlayListViewController: HeaderViewDelegate {
    func onPressPlay() {
        let data = ["items": playList.items,
                    "currentIndex": 0,
                    "type": PlaylistType.trending] as [String : Any]
        NotificationCenter.default.post(name: .OpenPlayBar, object: nil, userInfo: data)
    }

}
